{{ config.RenderWhenTemplateIsSaved = true }}
{{- for dto in data.Classes | Symbols.WhereNamespaceStartsWith "SmartGarden.Models"
        capture output
-}}
// Autogenerated models
{{-  for dependency in dto | Type.AllReferencedTypes }}
import { {{ dependency.BareName }} } from "./{{~ dependency.BareName | String.ToCamelCase  }}";
{{- end }}

export class {{ dto.Name }} {{- if dto.HasBaseClass }} extends {{ dto.BaseClass.Name; end }}
{
{{- for prop in dto.Properties }}
    {{ prop.Name | String.ToCamelCase }}: {{ prop.Type | Type.ToTypeScriptType }};
{{- end }}

    constructor(
    {{- for prop in dto.Properties }}
        {{- prop.Name | String.ToCamelCase }}: {{ prop.Type | Type.ToTypeScriptType }} = null,
    {{- end }})
    {
    {{-  if dto.HasBaseClass }}    super(); {{-end }}
    {{- for prop in dto.Properties }}
        this.{{ prop.Name | String.ToCamelCase }} = {{ prop.Name | String.ToCamelCase }};
    {{- end }}
    }
}
{{-     end
   Save output ("dtos/" + (dto.Name | String.ToCamelCase) + ".ts")
   end
}}

{{- for enum in data.Enums | Symbols.WhereNamespaceStartsWith "SmartGarden.Enums"
        capture output
}}
// Autogenerated enums
export enum {{ enum.Name }} 
{
{{- for item in enum.Values }}
    {{ item.Name }} = {{ item.Value }},   
{{- end }}
}
{{-     end
   Save output ("enums/" + (enum.Name | String.ToCamelCase) + ".ts")
   end 
}}
